#!/usr/bin/env python

from __future__ import division, print_function, unicode_literals

import sys
import os
import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk

def main():
    win = LauncherWindow()
    win.show_all()
    Gtk.main()


class LauncherWindow(Gtk.Dialog):

    def __init__(self):
        Gtk.Dialog.__init__(
                self, "Antares", None, 0,
                ("Quit", Gtk.ResponseType.CANCEL, "Start", Gtk.ResponseType.OK),
                window_position=Gtk.WindowPosition.CENTER)
        self.set_default_response(Gtk.ResponseType.OK)
        self.connect("response", self.handle)

        plugin = Gtk.Grid(row_homogeneous=True, hexpand=True, border_width=10)
        plugin.attach(Gtk.Label("Ares"), 0, 0, 2, 1)
        scenario = Gtk.LinkButton("http://www.arescentral.com/", label="Ares", hexpand=True, xalign=0, margin_left=10)
        plugin.attach(Gtk.Label("Scenario", xalign=1), 0, 1, 1, 1)
        plugin.attach(scenario, 1, 1, 1, 1)
        author = Gtk.LinkButton("http://www.biggerplanet.com/", label="Bigger Planet", hexpand=True, xalign=0, margin_left=10)
        plugin.attach(Gtk.Label("Author", xalign=1), 0, 2, 1, 1)
        plugin.attach(author, 1, 2, 1, 1)
        version = Gtk.Label("1.1.1", hexpand=True, justify=Gtk.Justification.LEFT, xalign=0,
                margin_left=10)
        plugin.attach(Gtk.Label("Version", xalign=1), 0, 3, 1, 1)
        plugin.attach(version, 1, 3, 1, 1)

        notebook = Gtk.Notebook()
        notebook.append_page(plugin, Gtk.Label("Scenario"))

        icon = Gtk.Image.new_from_file("resources/Antares.png")

        sections = Gtk.Box(orientation=Gtk.Orientation.VERTICAL)
        sections.pack_start(icon, False, False, 0)
        sections.pack_start(notebook, True, True, 0)
        self.get_content_area().add(sections)

    def handle(self, widget, value):
        if value == Gtk.ResponseType.OK:
            args = ["out/cur/antares"]
            os.execvp(args[0], args)
        else:
            Gtk.main_quit()


if __name__ == "__main__":
    main()
