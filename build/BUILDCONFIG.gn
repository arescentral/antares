# Copyright 2016 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

declare_args() {
  # Compilation mode, one of ["opt", "dev", "dbg"].
  # - opt: apply run-time optimizations for release.
  # - dev: apply compile-time optimizations for development.
  # - dbg: add debugging symbols for debugging.
  mode = "opt"
}

if (target_os == "") {
  target_os = host_os
}
if (current_os == "") {
  current_os = host_os
}
if (target_cpu == "") {
  target_cpu = target_cpu
}
if (current_cpu == "") {
  current_cpu = target_cpu
}

if (host_os == "mac") {
  assert(target_os == host_os, "cross-compilation not supported on mac")
  set_default_toolchain("//build/lib/mac")
} else if (host_os == "linux") {
  if (target_os == "linux") {
    set_default_toolchain("//build/lib/linux")
  } else if (target_os == "mac") {
    set_default_toolchain("//build/lib/linux:cross_mac")
  } else {
    assert(false, "linux cannot cross-compile for $target_os")
  }
} else {
  assert(false, "unsupported host_os $host_os")
}

_default_configs = [ "//build/lib:c++11" ]
if (target_os == "mac") {
  _default_configs += [ "//build/lib:libc++" ]
}

if (mode == "dev") {
  _default_configs += [ "//build/lib:dev" ]
} else if (mode == "opt") {
  _default_configs += [ "//build/lib:opt" ]
} else if (mode == "dbg") {
  _default_configs += [ "//build/lib:dbg" ]
} else {
  assert(false, "unsupported mode $mode")
}

set_defaults("executable") {
  configs = _default_configs
}
set_defaults("static_library") {
  configs = _default_configs
}
set_defaults("shared_library") {
  configs = _default_configs
}
set_defaults("source_set") {
  configs = _default_configs
}
