name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  Ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - run: sudo apt-get update
      - run: sudo apt-get install -y --no-install-recommends make python3 git gnupg
      - run: sudo scripts/deps.py install -- -y

      - run: ./configure --antares-version=$(git describe --tags HEAD)
      - run: make
      - run: make test
      - run: scripts/test.py --opengl=2.0
      - run: scripts/test.py --opengl=3.2

      - run: sudo make install

      - run: ./scripts/dist.py src zip
      - uses: actions/upload-artifact@v3
        with:
          name: antares-git.zip
          path: dist/antares-git.zip

      - if: ${{ github.event_name != 'pull_request' }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCLOUD_CREDENTIALS_JSON }}'
      - if: ${{ github.event_name != 'pull_request' }}
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          path: dist/antares-git.zip
          destination: 'downloads.arescentral.org/Antares'

  macOS:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - run: HOMEBREW_VERBOSE_USING_DOTS=true scripts/deps.py install -- -v
      - run: ./configure --antares-version=$(git describe --tags HEAD)
      - run: make
      - run: make smoke-test

      - if: ${{ github.event_name != 'pull_request' }}
        run: scripts/load-cert.sh
        env:
          DEVELOPER_P12_BASE64: ${{ secrets.DEVELOPER_P12_BASE64 }}
          DEVELOPER_P12_PASS_BASE64: ${{ secrets.DEVELOPER_P12_PASS_BASE64 }}
      - if: ${{ github.event_name != 'pull_request' }}
        run: make sign notarize
        env:
          APPLE_USER: ${{ secrets.APPLE_USER }}
          APPLE_PASS: ${{ secrets.APPLE_PASS }}
          APPLE_TEAM: ${{ secrets.APPLE_TEAM }}

      - run: ./scripts/dist.py mac zip
      - uses: actions/upload-artifact@v3
        with:
          name: antares-mac-git.zip
          path: dist/antares-mac-git.zip

      - if: ${{ github.event_name != 'pull_request' }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCLOUD_CREDENTIALS_JSON }}'
      - if: ${{ github.event_name != 'pull_request' }}
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          path: dist/antares-mac-git.zip
          destination: 'downloads.arescentral.org/Antares'

  Windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - run: python scripts/deps.py install
      - uses: ilammy/msvc-dev-cmd@v1
      - run: python configure --antares-version=$(git describe --tags HEAD)
      - run: ./ninja -C out/win/opt
      # - run: out/win/opt/procyon-cpp-test

      - run: python scripts/dist.py win zip
      - uses: actions/upload-artifact@v3
        with:
          name: antares-win-git.zip
          path: dist/antares-win-git.zip

      - if: ${{ github.event_name != 'pull_request' }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCLOUD_CREDENTIALS_JSON }}'
      - if: ${{ github.event_name != 'pull_request' }}
        uses: 'google-github-actions/upload-cloud-storage@v0'
        with:
          path: dist/antares-win-git.zip
          destination: 'downloads.arescentral.org/Antares'

#  Wine:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          submodules: true
#          fetch-depth: 0
#
#      - run: sudo apt-get update
#      - run: sudo apt-get install -y --no-install-recommends gnupg
#      - run: echo deb http://apt.arescentral.org focal contrib | sudo tee /etc/apt/sources.list.d/arescentral.list
#      - run: sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 5A4F5210FF46CEE4B799098BAC879AADD5B51AE9
#
#      - run: sudo apt-get update
#      - run: sudo apt-get install -y --no-install-recommends make build-essential clang python3 git mingw-w64 wine-stable gn ninja-build
#
#      - run: ./configure -o win --antares-version=$(git describe --tags HEAD)
#      - run: make build
#
#      - run: sudo apt-get install -y --no-install-recommends xvfb xauth
#      - run: make test-wine
