#!/usr/bin/env python3
# Copyright (C) 2017 The Antares Authors
# This file is part of Antares, a tactical space combat game.
# Antares is free software, distributed under the LGPL+. See COPYING.

import argparse
import os
import shlex
import sys

sys.path[0:0] = [
    os.path.join(os.path.dirname(__file__), "scripts"),
    os.path.join(os.path.dirname(__file__), "build", "lib", "scripts"),
]
try:
    import cfg
except ImportError:
    pass


def main():
    check_submodules()

    config_dir = os.path.dirname(sys.argv[0])
    if config_dir != "":
        os.chdir(config_dir)
    parser = argparse.ArgumentParser(formatter_class=argparse.RawTextHelpFormatter)
    parser.add_argument("-m",
                        "--mode",
                        metavar="MODE",
                        type=str,
                        choices="dbg dev opt".split(),
                        default="opt",
                        help="set build configuration:\n"
                        "  - opt: compile for fast binaries (default)\n"
                        "  - dev: compile for fast builds\n"
                        "  - dbg: add debugging symbols")
    parser.add_argument("-o",
                        "--target-os",
                        metavar="OS",
                        type=str,
                        help="target os (default: host os)")
    parser.add_argument("--prefix",
                        type=str,
                        default="/usr/local",
                        help="installation prefix (default: /usr/local)")
    parser.add_argument("-v",
                        "--antares-version",
                        metavar="X.X.X",
                        type=str,
                        help="override antares_version string")
    args = parser.parse_args()

    config = {
        "mode": args.mode,
        "target_os": args.target_os,
        "prefix": args.prefix,
        "add_cflags": shlex.split(os.environ.get("CPPFLAGS", "")),
        "add_cflags_c": shlex.split(os.environ.get("CFLAGS", "")),
        "add_cflags_cc": shlex.split(os.environ.get("CXXFLAGS", "")),
        "add_ldflags": shlex.split(os.environ.get("LDFLAGS", "")),
    }
    if args.antares_version:
        config["antares_version"] = args.antares_version
    if config["target_os"] == "mac":
        config["macosx_version_min"] = "10.7"

    import deps
    cfg.configure("Antares", deps.DISTROS, config)


def check_submodules():
    REQUIRED_SUBMODULES = [
        "build/lib/BUILD.gn",
        "ext/glfw/BUILD.gn",
        "ext/gmock/BUILD.gn",
        "ext/libmodplug/BUILD.gn",
        "ext/libpng/BUILD.gn",
        "ext/libsfz/BUILD.gn",
        "ext/libsndfile/BUILD.gn",
        "ext/libzipxx/BUILD.gn",
        "ext/procyon/BUILD.gn",
        "data/README.md",
    ]
    missing = False
    for module in REQUIRED_SUBMODULES:
        if not os.path.exists(os.path.join(module)):
            missing = True
            break

    if missing:
        print("Some submodules are missing. Run:")
        print("")
        print("  $ git submodule update --init build ext data")
        print("")
        print("Then, try ./configure again")
        sys.exit(1)


if __name__ == "__main__":
    main()
